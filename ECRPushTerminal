BUILDING DOCKER IMAGE

(base) arnavjain@Arnavs-Macbook-Air aws % docker build --platform linux/amd64 -t my-training-image .

[+] Building 2.6s (10/10) FINISHED                                                                                                                                                     docker:desktop-linux
 => [internal] load build definition from Dockerfile                                                                                                                                                   0.0s
 => => transferring dockerfile: 1.24kB                                                                                                                                                                 0.0s
 => [internal] load metadata for docker.io/library/python:3.8-slim                                                                                                                                     2.1s
 => [internal] load .dockerignore                                                                                                                                                                      0.0s
 => => transferring context: 2B                                                                                                                                                                        0.0s
 => [1/5] FROM docker.io/library/python:3.8-slim@sha256:463e5f5018b45cc2621ec7308df9ecaaf87deaf8fd88b28502659adf24b1662a                                                                               0.0s
 => [internal] load build context                                                                                                                                                                      0.0s
 => => transferring context: 3.70kB                                                                                                                                                                    0.0s
 => CACHED [2/5] RUN pip install --upgrade pip                                                                                                                                                         0.0s
 => CACHED [3/5] RUN pip install boto3 sagemaker pandas scikit-learn joblib imbalanced-learn                                                                                                           0.0s
 => [4/5] COPY train.py /opt/ml/code/train.py                                                                                                                                                          0.0s
 => [5/5] RUN chmod +x /opt/ml/code/train.py                                                                                                                                                           0.3s
 => exporting to image                                                                                                                                                                                 0.0s
 => => exporting layers                                                                                                                                                                                0.0s
 => => writing image sha256:a60035c091b1848ddfa123a65580da658ee125f42eba4b79bc7f39c42a376e74                                                                                                           0.0s
 => => naming to docker.io/library/my-training-image                                                                                                                                                   0.0s

View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/xme924d2whmua9eybur73uyho

What's next:
    View a summary of image vulnerabilities and recommendations â†’ docker scout quickview 

-------------------------------------------------------------------------------------------------------------------------------------
ECR LOGIN

(base) arnavjain@Arnavs-Macbook-Air aws % aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 580905162163.dkr.ecr.ap-south-1.amazonaws.com

Login Succeeded

-------------------------------------------------------------------------------------------------------------------------------------
DOCKER TAG AND PUSH TO ECR

(base) arnavjain@Arnavs-Macbook-Air aws % docker tag my-training-image:latest 580905162163.dkr.ecr.ap-south-1.amazonaws.com/my-training-image:latest

(base) arnavjain@Arnavs-Macbook-Air aws % docker push 580905162163.dkr.ecr.ap-south-1.amazonaws.com/my-training-image:latest

The push refers to repository [580905162163.dkr.ecr.ap-south-1.amazonaws.com/my-training-image]
486c40afc1d8: Pushed 
df0f2f159fb9: Pushed 
3c57b2a44574: Layer already exists 
d2dd9d4a6526: Layer already exists 
8b81fa4c988f: Layer already exists 
38d395ab1f6c: Layer already exists 
fda4aa6f33af: Layer already exists 
a696d13c7344: Layer already exists 
32148f9f6c5a: Layer already exists 
latest: digest: sha256:17945ed2ad055f43b86a7e85ac2d2ab32e7abd31e8ea59cc45bb8d7ba7dcc010 size: 2210

-------------------------------------------------------------------------------------------------------------------------------------
PUSHED SUCCESSFULLY, IS VISIBLE ON PRIVATE REPOSITORIES ON AWS.

RUNNING LOCALLY WITHOUT ERRORS:

(base) arnavjain@Arnavs-Macbook-Air aws % docker run --rm -v $(pwd)/data:/opt/ml/input/data -v $(pwd)/model:/opt/ml/model -v $(pwd)/output:/opt/ml/output my-training-image

WARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested
Parsed arguments:
Namespace(input_data='/opt/ml/input/data', model_dir='/opt/ml/model', output_data_dir='/opt/ml/output/data')
input_data_path: /opt/ml/input/data
model_dir: /opt/ml/model
output_data_dir: /opt/ml/output/data
input_data_file: /opt/ml/input/data/qa_pairs.json
Loaded 845 Q/A pairs.
DataFrame shape: (845, 2)
                                            question                                             answer
0     What is the primary objective of this project?  The primary objective is to examine the except...
1  What metrics are focused on in the project to ...  The focus is on revenue, customer service, pro...
2                          When was Revolut founded?                       Revolut was founded in 2015.
3                   Who are the founders of Revolut?  The founders are Nikolay Storonsky and Vlad Ya...
4                   What type of company is Revolut?  Revolut is a global neo-bank and financial tec...
Example question: What is the primary objective of this project?
Example answer: The primary objective is to examine the exceptional performance of Revolut in the UK market from a marketing standpoint.
TF-IDF vectorization complete. Shape: (845, 463)
Label encoding complete. Example encoded labels: [429 403 303 404 260]
Class distribution: {0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 2, 7: 1, 8: 7, 9: 4, 10: 8, 11: 1, 12: 1, 13: 1, 14: 1, 15: 7, 16: 1, 17: 1, 18: 1,
19: 1, 20: 1, 21: 3, 22: 4, 23: 7, 24: 1, 25: 3, 26: 1, 27: 2, 28: 1, 29: 1, 30: 2, 31: 3, 32: 7, 33: 1, 34: 1, 35: 1, 36: 6, 37: 4, 38: 9, 
39: 1, 40: 5, 41: 11, 42: 1, 43: 1, 44: 2, 45: 1, 46: 1, 47: 1, 48: 1, 49: 1, 50: 1, 51: 1, 52: 6, 53: 1, 54: 1, 55: 2, 56: 1, 57: 2, 58: 1,
59: 1, 60: 1, 61: 4, 62: 10, 63: 1, 64: 6, 65: 19, 66: 6, 67: 1, 68: 7, 69: 1, 70: 1, 71: 1, 72: 1, 73: 1, 74: 5, 75: 8, 76: 4, 77: 11,
78: 1, 79: 7, 80: 6, 81: 1, 82: 3, 83: 1, 84: 8, 85: 1, 86: 2, 87: 1, 88: 1, 89: 1, 90: 1, 91: 2, 92: 3, 93: 7, 94: 1, 95: 1, 96: 1, 97: 2, 
98: 1, 99: 1, 100: 1, 101: 1, 102: 8, 103: 1, 104: 1, 105: 1, 106: 1, 107: 4, 108: 7, 109: 1, 110: 1, 111: 1, 112: 1, 113: 1, 114: 1, 115: 1,
116: 1, 117: 1, 118: 1, 119: 1, 120: 1, 121: 2, 122: 1, 123: 1, 124: 1, 125: 1, 126: 1, 127: 1, 128: 1, 129: 1, 130: 1, 131: 1, 132: 1, 133: 1,
134: 2, 135: 7, 136: 1, 137: 1, 138: 1, 139: 1, 140: 1, 141: 1, 142: 2, 143: 1, 144: 1, 145: 1, 146: 1, 147: 1, 148: 1, 149: 1, 150: 1, 151: 1,
152: 6, 153: 1, 154: 1, 155: 1, 156: 1, 157: 1, 158: 1, 159: 7, 160: 6, 161: 1, 162: 1, 163: 1, 164: 8, 165: 1, 166: 1, 167: 1, 168: 1, 169: 1,
170: 1, 171: 1, 172: 1, 173: 2, 174: 1, 175: 1, 176: 1, 177: 1, 178: 1, 179: 1, 180: 1, 181: 1, 182: 1, 183: 1, 184: 5, 185: 9, 186: 4, 187: 10,
188: 1, 189: 1, 190: 1, 191: 1, 192: 1, 193: 1, 194: 1, 195: 4, 196: 7, 197: 1, 198: 2, 199: 1, 200: 1, 201: 1, 202: 1, 203: 1, 204: 1, 205: 1,
206: 1, 207: 1, 208: 1, 209: 1, 210: 1, 211: 1, 212: 1, 213: 1, 214: 1, 215: 1, 216: 1, 217: 1, 218: 1, 219: 1, 220: 1, 221: 1, 222: 1, 223: 1,
224: 1, 225: 1, 226: 1, 227: 2, 228: 1, 229: 1, 230: 1, 231: 1, 232: 1, 233: 1, 234: 1, 235: 1, 236: 1, 237: 1, 238: 1, 239: 1, 240: 1, 241: 1,
242: 1, 243: 1, 244: 1, 245: 1, 246: 1, 247: 1, 248: 1, 249: 1, 250: 1, 251: 1, 252: 1, 253: 1, 254: 1, 255: 1, 256: 1, 257: 1, 258: 1, 259: 1,
260: 1, 261: 1, 262: 1, 263: 1, 264: 1, 265: 1, 266: 1, 267: 1, 268: 3, 269: 7, 270: 1, 271: 3, 272: 15, 273: 1, 274: 1, 275: 1, 276: 1, 277: 1,
278: 1, 279: 1, 280: 1, 281: 1, 282: 1, 283: 1, 284: 1, 285: 1, 286: 1, 287: 1, 288: 1, 289: 1, 290: 1, 291: 1, 292: 1, 293: 1, 294: 1, 295: 1,
296: 1, 297: 1, 298: 1, 299: 1, 300: 1, 301: 1, 302: 1, 303: 1, 304: 1, 305: 1, 306: 1, 307: 1, 308: 1, 309: 1, 310: 1, 311: 1, 312: 1, 313: 1,
314: 1, 315: 1, 316: 1, 317: 1, 318: 1, 319: 1, 320: 1, 321: 1, 322: 1, 323: 1, 324: 1, 325: 1, 326: 1, 327: 1, 328: 1, 329: 1, 330: 1, 331: 1,
332: 1, 333: 1, 334: 1, 335: 1, 336: 1, 337: 1, 338: 1, 339: 7, 340: 1, 341: 1, 342: 1, 343: 1, 344: 1, 345: 1, 346: 1, 347: 1, 348: 1, 349: 2,
350: 1, 351: 1, 352: 2, 353: 1, 354: 2, 355: 1, 356: 1, 357: 1, 358: 1, 359: 1, 360: 7, 361: 1, 362: 1, 363: 1, 364: 6, 365: 1, 366: 1, 367: 1,
368: 1, 369: 1, 370: 1, 371: 1, 372: 1, 373: 1, 374: 1, 375: 1, 376: 1, 377: 1, 378: 2, 379: 4, 380: 7, 381: 1, 382: 1, 383: 2, 384: 1, 385: 1,
386: 1, 387: 1, 388: 1, 389: 1, 390: 3, 391: 3, 392: 8, 393: 4, 394: 9, 395: 1, 396: 1, 397: 1, 398: 2, 399: 1, 400: 2, 401: 1, 402: 1, 403: 1,
404: 1, 405: 1, 406: 1, 407: 1, 408: 1, 409: 1, 410: 1, 411: 1, 412: 1, 413: 1, 414: 1, 415: 1, 416: 1, 417: 1, 418: 1, 419: 1, 420: 1, 421: 1,
422: 1, 423: 1, 424: 1, 425: 1, 426: 1, 427: 1, 428: 1, 429: 1, 430: 1, 431: 1, 432: 1, 433: 1, 434: 1, 435: 1, 436: 2, 437: 1, 438: 1, 439: 1,
440: 1, 441: 1, 442: 1, 443: 1, 444: 1, 445: 4, 446: 10, 447: 1, 448: 2, 449: 1, 450: 1, 451: 1, 452: 4, 453: 10, 454: 8, 455: 6, 456: 1, 457: 1,
458: 1}
After resampling - X shape: (8721, 463), y shape: (8721,)
Train/test split complete. Train shape: (6976, 463), Test shape: (1745, 463)
Model training complete.
Model accuracy: 0.6997134670487106
Model, vectorizer, and label encoder saved.


